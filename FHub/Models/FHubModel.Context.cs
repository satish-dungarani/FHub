//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FHub.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FHubDBEntities : DbContext
    {
        public FHubDBEntities()
            : base("name=FHubDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<AppUser> AppUsers { get; set; }
        public virtual DbSet<ErrLog> ErrLogs { get; set; }
        public virtual DbSet<AppLog> AppLogs { get; set; }
        public virtual DbSet<WriteToU> WriteToUs { get; set; }
        public virtual DbSet<VendorAssociation> VendorAssociations { get; set; }
    
        public virtual ObjectResult<sp_VendorAssociation_Select_Result> sp_VendorAssociation_Select(Nullable<int> pAUId)
        {
            var pAUIdParameter = pAUId.HasValue ?
                new ObjectParameter("pAUId", pAUId) :
                new ObjectParameter("pAUId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VendorAssociation_Select_Result>("sp_VendorAssociation_Select", pAUIdParameter);
        }
    
        public virtual ObjectResult<sp_Vendor_Select_Result> sp_Vendor_Select(Nullable<int> pVendorId)
        {
            var pVendorIdParameter = pVendorId.HasValue ?
                new ObjectParameter("pVendorId", pVendorId) :
                new ObjectParameter("pVendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Vendor_Select_Result>("sp_Vendor_Select", pVendorIdParameter);
        }
    
        public virtual ObjectResult<sp_AppUser_Select_Result> sp_AppUser_Select(Nullable<int> pAUId)
        {
            var pAUIdParameter = pAUId.HasValue ?
                new ObjectParameter("pAUId", pAUId) :
                new ObjectParameter("pAUId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AppUser_Select_Result>("sp_AppUser_Select", pAUIdParameter);
        }
    
        public virtual ObjectResult<sp_AppUser_SelectWhere_Result> sp_AppUser_SelectWhere(Nullable<int> pDeviceId)
        {
            var pDeviceIdParameter = pDeviceId.HasValue ?
                new ObjectParameter("pDeviceId", pDeviceId) :
                new ObjectParameter("pDeviceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AppUser_SelectWhere_Result>("sp_AppUser_SelectWhere", pDeviceIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_VendorAssociation_Save(Nullable<int> pRefAUId, string pVendorCode)
        {
            var pRefAUIdParameter = pRefAUId.HasValue ?
                new ObjectParameter("pRefAUId", pRefAUId) :
                new ObjectParameter("pRefAUId", typeof(int));
    
            var pVendorCodeParameter = pVendorCode != null ?
                new ObjectParameter("pVendorCode", pVendorCode) :
                new ObjectParameter("pVendorCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_VendorAssociation_Save", pRefAUIdParameter, pVendorCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_AppUser_Save(Nullable<int> pAUId, string pAUName, string pCompanyName, string pAddress, string pLandMark, string pCountry, string pState, string pCity, string pPincode, string pContactNo1, string pContactNo2, string pMobileNo1, string pMobileNo2, string pEmailId, string pWebSite, string pGCMID, string pDeviceID, string pDeviceOS, Nullable<bool> pIsActive, Nullable<bool> pIsNotify, string pDefaultView, string pAppUserImg, Nullable<int> pUser, string pTerminal)
        {
            var pAUIdParameter = pAUId.HasValue ?
                new ObjectParameter("pAUId", pAUId) :
                new ObjectParameter("pAUId", typeof(int));
    
            var pAUNameParameter = pAUName != null ?
                new ObjectParameter("pAUName", pAUName) :
                new ObjectParameter("pAUName", typeof(string));
    
            var pCompanyNameParameter = pCompanyName != null ?
                new ObjectParameter("pCompanyName", pCompanyName) :
                new ObjectParameter("pCompanyName", typeof(string));
    
            var pAddressParameter = pAddress != null ?
                new ObjectParameter("pAddress", pAddress) :
                new ObjectParameter("pAddress", typeof(string));
    
            var pLandMarkParameter = pLandMark != null ?
                new ObjectParameter("pLandMark", pLandMark) :
                new ObjectParameter("pLandMark", typeof(string));
    
            var pCountryParameter = pCountry != null ?
                new ObjectParameter("pCountry", pCountry) :
                new ObjectParameter("pCountry", typeof(string));
    
            var pStateParameter = pState != null ?
                new ObjectParameter("pState", pState) :
                new ObjectParameter("pState", typeof(string));
    
            var pCityParameter = pCity != null ?
                new ObjectParameter("pCity", pCity) :
                new ObjectParameter("pCity", typeof(string));
    
            var pPincodeParameter = pPincode != null ?
                new ObjectParameter("pPincode", pPincode) :
                new ObjectParameter("pPincode", typeof(string));
    
            var pContactNo1Parameter = pContactNo1 != null ?
                new ObjectParameter("pContactNo1", pContactNo1) :
                new ObjectParameter("pContactNo1", typeof(string));
    
            var pContactNo2Parameter = pContactNo2 != null ?
                new ObjectParameter("pContactNo2", pContactNo2) :
                new ObjectParameter("pContactNo2", typeof(string));
    
            var pMobileNo1Parameter = pMobileNo1 != null ?
                new ObjectParameter("pMobileNo1", pMobileNo1) :
                new ObjectParameter("pMobileNo1", typeof(string));
    
            var pMobileNo2Parameter = pMobileNo2 != null ?
                new ObjectParameter("pMobileNo2", pMobileNo2) :
                new ObjectParameter("pMobileNo2", typeof(string));
    
            var pEmailIdParameter = pEmailId != null ?
                new ObjectParameter("pEmailId", pEmailId) :
                new ObjectParameter("pEmailId", typeof(string));
    
            var pWebSiteParameter = pWebSite != null ?
                new ObjectParameter("pWebSite", pWebSite) :
                new ObjectParameter("pWebSite", typeof(string));
    
            var pGCMIDParameter = pGCMID != null ?
                new ObjectParameter("pGCMID", pGCMID) :
                new ObjectParameter("pGCMID", typeof(string));
    
            var pDeviceIDParameter = pDeviceID != null ?
                new ObjectParameter("pDeviceID", pDeviceID) :
                new ObjectParameter("pDeviceID", typeof(string));
    
            var pDeviceOSParameter = pDeviceOS != null ?
                new ObjectParameter("pDeviceOS", pDeviceOS) :
                new ObjectParameter("pDeviceOS", typeof(string));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pIsNotifyParameter = pIsNotify.HasValue ?
                new ObjectParameter("pIsNotify", pIsNotify) :
                new ObjectParameter("pIsNotify", typeof(bool));
    
            var pDefaultViewParameter = pDefaultView != null ?
                new ObjectParameter("pDefaultView", pDefaultView) :
                new ObjectParameter("pDefaultView", typeof(string));
    
            var pAppUserImgParameter = pAppUserImg != null ?
                new ObjectParameter("pAppUserImg", pAppUserImg) :
                new ObjectParameter("pAppUserImg", typeof(string));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_AppUser_Save", pAUIdParameter, pAUNameParameter, pCompanyNameParameter, pAddressParameter, pLandMarkParameter, pCountryParameter, pStateParameter, pCityParameter, pPincodeParameter, pContactNo1Parameter, pContactNo2Parameter, pMobileNo1Parameter, pMobileNo2Parameter, pEmailIdParameter, pWebSiteParameter, pGCMIDParameter, pDeviceIDParameter, pDeviceOSParameter, pIsActiveParameter, pIsNotifyParameter, pDefaultViewParameter, pAppUserImgParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_MasterValue_Select_Result> sp_MasterValue_Select(Nullable<int> pId, Nullable<int> pRefMasterId, Nullable<int> pRefVendorId)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pRefMasterIdParameter = pRefMasterId.HasValue ?
                new ObjectParameter("pRefMasterId", pRefMasterId) :
                new ObjectParameter("pRefMasterId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MasterValue_Select_Result>("sp_MasterValue_Select", pIdParameter, pRefMasterIdParameter, pRefVendorIdParameter);
        }
    
        public virtual ObjectResult<sp_MasterValue_GetMinMaxPrice_Result> sp_MasterValue_GetMinMaxPrice(Nullable<int> pRefVendorId, string pRefCategory)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pRefCategoryParameter = pRefCategory != null ?
                new ObjectParameter("pRefCategory", pRefCategory) :
                new ObjectParameter("pRefCategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MasterValue_GetMinMaxPrice_Result>("sp_MasterValue_GetMinMaxPrice", pRefVendorIdParameter, pRefCategoryParameter);
        }
    
        public virtual ObjectResult<sp_CatalogMas_Filter_Result> sp_CatalogMas_Filter(Nullable<int> pRefVendorId, string pRefCategory, string pCatCode, Nullable<int> pPageSize, Nullable<int> pPageIndex, string pRefProdType, string pRefFabric, string pRefDesign, string pRefBrand, Nullable<decimal> pStartPrice, Nullable<decimal> pEndPrice, Nullable<bool> pFullSet, string pOrderBy)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pRefCategoryParameter = pRefCategory != null ?
                new ObjectParameter("pRefCategory", pRefCategory) :
                new ObjectParameter("pRefCategory", typeof(string));
    
            var pCatCodeParameter = pCatCode != null ?
                new ObjectParameter("pCatCode", pCatCode) :
                new ObjectParameter("pCatCode", typeof(string));
    
            var pPageSizeParameter = pPageSize.HasValue ?
                new ObjectParameter("pPageSize", pPageSize) :
                new ObjectParameter("pPageSize", typeof(int));
    
            var pPageIndexParameter = pPageIndex.HasValue ?
                new ObjectParameter("pPageIndex", pPageIndex) :
                new ObjectParameter("pPageIndex", typeof(int));
    
            var pRefProdTypeParameter = pRefProdType != null ?
                new ObjectParameter("pRefProdType", pRefProdType) :
                new ObjectParameter("pRefProdType", typeof(string));
    
            var pRefFabricParameter = pRefFabric != null ?
                new ObjectParameter("pRefFabric", pRefFabric) :
                new ObjectParameter("pRefFabric", typeof(string));
    
            var pRefDesignParameter = pRefDesign != null ?
                new ObjectParameter("pRefDesign", pRefDesign) :
                new ObjectParameter("pRefDesign", typeof(string));
    
            var pRefBrandParameter = pRefBrand != null ?
                new ObjectParameter("pRefBrand", pRefBrand) :
                new ObjectParameter("pRefBrand", typeof(string));
    
            var pStartPriceParameter = pStartPrice.HasValue ?
                new ObjectParameter("pStartPrice", pStartPrice) :
                new ObjectParameter("pStartPrice", typeof(decimal));
    
            var pEndPriceParameter = pEndPrice.HasValue ?
                new ObjectParameter("pEndPrice", pEndPrice) :
                new ObjectParameter("pEndPrice", typeof(decimal));
    
            var pFullSetParameter = pFullSet.HasValue ?
                new ObjectParameter("pFullSet", pFullSet) :
                new ObjectParameter("pFullSet", typeof(bool));
    
            var pOrderByParameter = pOrderBy != null ?
                new ObjectParameter("pOrderBy", pOrderBy) :
                new ObjectParameter("pOrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CatalogMas_Filter_Result>("sp_CatalogMas_Filter", pRefVendorIdParameter, pRefCategoryParameter, pCatCodeParameter, pPageSizeParameter, pPageIndexParameter, pRefProdTypeParameter, pRefFabricParameter, pRefDesignParameter, pRefBrandParameter, pStartPriceParameter, pEndPriceParameter, pFullSetParameter, pOrderByParameter);
        }
    
        public virtual ObjectResult<sp_ProductMas_Select_Result> sp_ProductMas_Select(Nullable<int> pRefVendorId, Nullable<int> pCatId, string pCategory, Nullable<int> pPageSize, Nullable<int> pPageIndex)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pCatIdParameter = pCatId.HasValue ?
                new ObjectParameter("pCatId", pCatId) :
                new ObjectParameter("pCatId", typeof(int));
    
            var pCategoryParameter = pCategory != null ?
                new ObjectParameter("pCategory", pCategory) :
                new ObjectParameter("pCategory", typeof(string));
    
            var pPageSizeParameter = pPageSize.HasValue ?
                new ObjectParameter("pPageSize", pPageSize) :
                new ObjectParameter("pPageSize", typeof(int));
    
            var pPageIndexParameter = pPageIndex.HasValue ?
                new ObjectParameter("pPageIndex", pPageIndex) :
                new ObjectParameter("pPageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductMas_Select_Result>("sp_ProductMas_Select", pRefVendorIdParameter, pCatIdParameter, pCategoryParameter, pPageSizeParameter, pPageIndexParameter);
        }
    
        public virtual ObjectResult<sp_VendorAssociation_SelectWhere_Result> sp_VendorAssociation_SelectWhere(string pdefWhere)
        {
            var pdefWhereParameter = pdefWhere != null ?
                new ObjectParameter("pdefWhere", pdefWhere) :
                new ObjectParameter("pdefWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VendorAssociation_SelectWhere_Result>("sp_VendorAssociation_SelectWhere", pdefWhereParameter);
        }
    
        public virtual ObjectResult<sp_ProductCategory_SelectWhere_Result> sp_ProductCategory_SelectWhere(string pdefWhere)
        {
            var pdefWhereParameter = pdefWhere != null ?
                new ObjectParameter("pdefWhere", pdefWhere) :
                new ObjectParameter("pdefWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductCategory_SelectWhere_Result>("sp_ProductCategory_SelectWhere", pdefWhereParameter);
        }
    
        public virtual ObjectResult<sp_CatalogMas_Select_Result> sp_CatalogMas_Select(Nullable<int> pRefVendorId, string pRefCategory, Nullable<int> pPageSize, Nullable<int> pPageIndex)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pRefCategoryParameter = pRefCategory != null ?
                new ObjectParameter("pRefCategory", pRefCategory) :
                new ObjectParameter("pRefCategory", typeof(string));
    
            var pPageSizeParameter = pPageSize.HasValue ?
                new ObjectParameter("pPageSize", pPageSize) :
                new ObjectParameter("pPageSize", typeof(int));
    
            var pPageIndexParameter = pPageIndex.HasValue ?
                new ObjectParameter("pPageIndex", pPageIndex) :
                new ObjectParameter("pPageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CatalogMas_Select_Result>("sp_CatalogMas_Select", pRefVendorIdParameter, pRefCategoryParameter, pPageSizeParameter, pPageIndexParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_AppLog_Save(Nullable<int> pRefAUId, Nullable<int> pRefVendorId, string pLogType, Nullable<int> pRefId, string pLogDesc, Nullable<int> pUser, string pTerminal)
        {
            var pRefAUIdParameter = pRefAUId.HasValue ?
                new ObjectParameter("pRefAUId", pRefAUId) :
                new ObjectParameter("pRefAUId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pLogTypeParameter = pLogType != null ?
                new ObjectParameter("pLogType", pLogType) :
                new ObjectParameter("pLogType", typeof(string));
    
            var pRefIdParameter = pRefId.HasValue ?
                new ObjectParameter("pRefId", pRefId) :
                new ObjectParameter("pRefId", typeof(int));
    
            var pLogDescParameter = pLogDesc != null ?
                new ObjectParameter("pLogDesc", pLogDesc) :
                new ObjectParameter("pLogDesc", typeof(string));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_AppLog_Save", pRefAUIdParameter, pRefVendorIdParameter, pLogTypeParameter, pRefIdParameter, pLogDescParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_WriteToUs_Save(Nullable<int> pRefAUId, string pRemark, Nullable<int> pUser, string pTerminal)
        {
            var pRefAUIdParameter = pRefAUId.HasValue ?
                new ObjectParameter("pRefAUId", pRefAUId) :
                new ObjectParameter("pRefAUId", typeof(int));
    
            var pRemarkParameter = pRemark != null ?
                new ObjectParameter("pRemark", pRemark) :
                new ObjectParameter("pRemark", typeof(string));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_WriteToUs_Save", pRefAUIdParameter, pRemarkParameter, pUserParameter, pTerminalParameter);
        }
    }
}
