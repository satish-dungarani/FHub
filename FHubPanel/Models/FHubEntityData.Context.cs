//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FHubPanel.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FHubDBEntities : DbContext
    {
        public FHubDBEntities()
            : base("name=FHubDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MasterValue> MasterValues { get; set; }
        public virtual DbSet<CatalogMa> CatalogMas { get; set; }
        public virtual DbSet<ProductMa> ProductMas { get; set; }
        public virtual DbSet<VendorSlider> VendorSliders { get; set; }
        public virtual DbSet<AppLog> AppLogs { get; set; }
        public virtual DbSet<AppUser> AppUsers { get; set; }
        public virtual DbSet<ErrLog> ErrLogs { get; set; }
        public virtual DbSet<VendorAssociation> VendorAssociations { get; set; }
        public virtual DbSet<WriteToU> WriteToUs { get; set; }
        public virtual DbSet<ProductImgDet> ProductImgDets { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<MenuRoleRight> MenuRoleRights { get; set; }
        public virtual DbSet<GroupContactList> GroupContactLists { get; set; }
        public virtual DbSet<GroupMa> GroupMas { get; set; }
        public virtual DbSet<NotificationMa> NotificationMas { get; set; }
        public virtual DbSet<EnquiryList> EnquiryLists { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<CompanyProfile> CompanyProfiles { get; set; }
        public virtual DbSet<StoreAssociation> StoreAssociations { get; set; }
        public virtual DbSet<MastersList> MastersLists { get; set; }
        public virtual DbSet<ParameterMapping> ParameterMappings { get; set; }
    
        public virtual ObjectResult<Nullable<int>> sp_MasterValue_Save(Nullable<int> pId, Nullable<int> pRefMasterId, Nullable<int> pRefVendorId, string pValueName, string pValueDesc, Nullable<decimal> pOrdNo, Nullable<bool> pIsActive, Nullable<int> pUser, string pTerminal)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pRefMasterIdParameter = pRefMasterId.HasValue ?
                new ObjectParameter("pRefMasterId", pRefMasterId) :
                new ObjectParameter("pRefMasterId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pValueNameParameter = pValueName != null ?
                new ObjectParameter("pValueName", pValueName) :
                new ObjectParameter("pValueName", typeof(string));
    
            var pValueDescParameter = pValueDesc != null ?
                new ObjectParameter("pValueDesc", pValueDesc) :
                new ObjectParameter("pValueDesc", typeof(string));
    
            var pOrdNoParameter = pOrdNo.HasValue ?
                new ObjectParameter("pOrdNo", pOrdNo) :
                new ObjectParameter("pOrdNo", typeof(decimal));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MasterValue_Save", pIdParameter, pRefMasterIdParameter, pRefVendorIdParameter, pValueNameParameter, pValueDescParameter, pOrdNoParameter, pIsActiveParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_MasterValue_Select_Result> sp_MasterValue_Select(Nullable<int> pId, Nullable<int> pRefMasterId, Nullable<int> pRefVendorId)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pRefMasterIdParameter = pRefMasterId.HasValue ?
                new ObjectParameter("pRefMasterId", pRefMasterId) :
                new ObjectParameter("pRefMasterId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MasterValue_Select_Result>("sp_MasterValue_Select", pIdParameter, pRefMasterIdParameter, pRefVendorIdParameter);
        }
    
        public virtual ObjectResult<sp_MasterValue_SelectWhere_Result> sp_MasterValue_SelectWhere(string pdefWhere)
        {
            var pdefWhereParameter = pdefWhere != null ?
                new ObjectParameter("pdefWhere", pdefWhere) :
                new ObjectParameter("pdefWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MasterValue_SelectWhere_Result>("sp_MasterValue_SelectWhere", pdefWhereParameter);
        }
    
        public virtual ObjectResult<sp_Vendor_Select_Result> sp_Vendor_Select(Nullable<int> pVendorId)
        {
            var pVendorIdParameter = pVendorId.HasValue ?
                new ObjectParameter("pVendorId", pVendorId) :
                new ObjectParameter("pVendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Vendor_Select_Result>("sp_Vendor_Select", pVendorIdParameter);
        }
    
        public virtual ObjectResult<sp_Vendor_SelectWhere_Result> sp_Vendor_SelectWhere(string pdefWhere)
        {
            var pdefWhereParameter = pdefWhere != null ?
                new ObjectParameter("pdefWhere", pdefWhere) :
                new ObjectParameter("pdefWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Vendor_SelectWhere_Result>("sp_Vendor_SelectWhere", pdefWhereParameter);
        }
    
        public virtual ObjectResult<sp_ProductCategory_Select_Result> sp_ProductCategory_Select(Nullable<int> pPCId)
        {
            var pPCIdParameter = pPCId.HasValue ?
                new ObjectParameter("pPCId", pPCId) :
                new ObjectParameter("pPCId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductCategory_Select_Result>("sp_ProductCategory_Select", pPCIdParameter);
        }
    
        public virtual ObjectResult<sp_ProductCategory_SelectWhere_Result> sp_ProductCategory_SelectWhere(string pdefWhere)
        {
            var pdefWhereParameter = pdefWhere != null ?
                new ObjectParameter("pdefWhere", pdefWhere) :
                new ObjectParameter("pdefWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductCategory_SelectWhere_Result>("sp_ProductCategory_SelectWhere", pdefWhereParameter);
        }
    
        public virtual ObjectResult<sp_CatalogMas_SelectForAdmin_Result> sp_CatalogMas_SelectForAdmin(Nullable<int> pRefVendorId, string pSearchvalue, Nullable<int> pPageSize, Nullable<int> pPageIndex)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pSearchvalueParameter = pSearchvalue != null ?
                new ObjectParameter("pSearchvalue", pSearchvalue) :
                new ObjectParameter("pSearchvalue", typeof(string));
    
            var pPageSizeParameter = pPageSize.HasValue ?
                new ObjectParameter("pPageSize", pPageSize) :
                new ObjectParameter("pPageSize", typeof(int));
    
            var pPageIndexParameter = pPageIndex.HasValue ?
                new ObjectParameter("pPageIndex", pPageIndex) :
                new ObjectParameter("pPageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CatalogMas_SelectForAdmin_Result>("sp_CatalogMas_SelectForAdmin", pRefVendorIdParameter, pSearchvalueParameter, pPageSizeParameter, pPageIndexParameter);
        }
    
        public virtual ObjectResult<sp_CatatlogMas_SelectBaseOnCatId_Result> sp_CatatlogMas_SelectBaseOnCatId(Nullable<int> pCatId)
        {
            var pCatIdParameter = pCatId.HasValue ?
                new ObjectParameter("pCatId", pCatId) :
                new ObjectParameter("pCatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CatatlogMas_SelectBaseOnCatId_Result>("sp_CatatlogMas_SelectBaseOnCatId", pCatIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_CatalogMas_Save(Nullable<int> pCatId, Nullable<int> pRefVendorId, string pCatCode, string pCatName, string pCatDescription, string pCatImg, Nullable<System.DateTime> pCatLaunchDate, Nullable<bool> pIsFullset, Nullable<bool> pIsActive, Nullable<int> pUser, string pTerminal)
        {
            var pCatIdParameter = pCatId.HasValue ?
                new ObjectParameter("pCatId", pCatId) :
                new ObjectParameter("pCatId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pCatCodeParameter = pCatCode != null ?
                new ObjectParameter("pCatCode", pCatCode) :
                new ObjectParameter("pCatCode", typeof(string));
    
            var pCatNameParameter = pCatName != null ?
                new ObjectParameter("pCatName", pCatName) :
                new ObjectParameter("pCatName", typeof(string));
    
            var pCatDescriptionParameter = pCatDescription != null ?
                new ObjectParameter("pCatDescription", pCatDescription) :
                new ObjectParameter("pCatDescription", typeof(string));
    
            var pCatImgParameter = pCatImg != null ?
                new ObjectParameter("pCatImg", pCatImg) :
                new ObjectParameter("pCatImg", typeof(string));
    
            var pCatLaunchDateParameter = pCatLaunchDate.HasValue ?
                new ObjectParameter("pCatLaunchDate", pCatLaunchDate) :
                new ObjectParameter("pCatLaunchDate", typeof(System.DateTime));
    
            var pIsFullsetParameter = pIsFullset.HasValue ?
                new ObjectParameter("pIsFullset", pIsFullset) :
                new ObjectParameter("pIsFullset", typeof(bool));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_CatalogMas_Save", pCatIdParameter, pRefVendorIdParameter, pCatCodeParameter, pCatNameParameter, pCatDescriptionParameter, pCatImgParameter, pCatLaunchDateParameter, pIsFullsetParameter, pIsActiveParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_ProductMas_SelectWhereForAdmin_Result> sp_ProductMas_SelectWhereForAdmin(Nullable<int> pRefVendorId, string pSearchValue, Nullable<int> pPageSize, Nullable<int> pPageIndex)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pSearchValueParameter = pSearchValue != null ?
                new ObjectParameter("pSearchValue", pSearchValue) :
                new ObjectParameter("pSearchValue", typeof(string));
    
            var pPageSizeParameter = pPageSize.HasValue ?
                new ObjectParameter("pPageSize", pPageSize) :
                new ObjectParameter("pPageSize", typeof(int));
    
            var pPageIndexParameter = pPageIndex.HasValue ?
                new ObjectParameter("pPageIndex", pPageIndex) :
                new ObjectParameter("pPageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductMas_SelectWhereForAdmin_Result>("sp_ProductMas_SelectWhereForAdmin", pRefVendorIdParameter, pSearchValueParameter, pPageSizeParameter, pPageIndexParameter);
        }
    
        public virtual ObjectResult<sp_ProductMas_SelectForAdmin_Result> sp_ProductMas_SelectForAdmin(Nullable<int> pRefVendorId, Nullable<int> pProdId)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pProdIdParameter = pProdId.HasValue ?
                new ObjectParameter("pProdId", pProdId) :
                new ObjectParameter("pProdId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductMas_SelectForAdmin_Result>("sp_ProductMas_SelectForAdmin", pRefVendorIdParameter, pProdIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_VendorSlider_Save(Nullable<int> pSliderId, Nullable<int> pRefVendorId, string pSliderTitle, string pSliderImg, string pSliderUrl, Nullable<int> pOrd, string pDisplayPage, string pCategory, Nullable<System.DateTime> pStartDate, Nullable<System.DateTime> pEndDate, Nullable<int> pUser, string pTerminal)
        {
            var pSliderIdParameter = pSliderId.HasValue ?
                new ObjectParameter("pSliderId", pSliderId) :
                new ObjectParameter("pSliderId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pSliderTitleParameter = pSliderTitle != null ?
                new ObjectParameter("pSliderTitle", pSliderTitle) :
                new ObjectParameter("pSliderTitle", typeof(string));
    
            var pSliderImgParameter = pSliderImg != null ?
                new ObjectParameter("pSliderImg", pSliderImg) :
                new ObjectParameter("pSliderImg", typeof(string));
    
            var pSliderUrlParameter = pSliderUrl != null ?
                new ObjectParameter("pSliderUrl", pSliderUrl) :
                new ObjectParameter("pSliderUrl", typeof(string));
    
            var pOrdParameter = pOrd.HasValue ?
                new ObjectParameter("pOrd", pOrd) :
                new ObjectParameter("pOrd", typeof(int));
    
            var pDisplayPageParameter = pDisplayPage != null ?
                new ObjectParameter("pDisplayPage", pDisplayPage) :
                new ObjectParameter("pDisplayPage", typeof(string));
    
            var pCategoryParameter = pCategory != null ?
                new ObjectParameter("pCategory", pCategory) :
                new ObjectParameter("pCategory", typeof(string));
    
            var pStartDateParameter = pStartDate.HasValue ?
                new ObjectParameter("pStartDate", pStartDate) :
                new ObjectParameter("pStartDate", typeof(System.DateTime));
    
            var pEndDateParameter = pEndDate.HasValue ?
                new ObjectParameter("pEndDate", pEndDate) :
                new ObjectParameter("pEndDate", typeof(System.DateTime));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_VendorSlider_Save", pSliderIdParameter, pRefVendorIdParameter, pSliderTitleParameter, pSliderImgParameter, pSliderUrlParameter, pOrdParameter, pDisplayPageParameter, pCategoryParameter, pStartDateParameter, pEndDateParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_VendorSlider_Select_Result> sp_VendorSlider_Select(Nullable<int> pSliderId)
        {
            var pSliderIdParameter = pSliderId.HasValue ?
                new ObjectParameter("pSliderId", pSliderId) :
                new ObjectParameter("pSliderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VendorSlider_Select_Result>("sp_VendorSlider_Select", pSliderIdParameter);
        }
    
        public virtual ObjectResult<sp_VendorSlider_SelectWhere_Result> sp_VendorSlider_SelectWhere(Nullable<int> pRefVendorId, string pSearch, Nullable<int> pPageSize, Nullable<int> pPageIndex)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pSearchParameter = pSearch != null ?
                new ObjectParameter("pSearch", pSearch) :
                new ObjectParameter("pSearch", typeof(string));
    
            var pPageSizeParameter = pPageSize.HasValue ?
                new ObjectParameter("pPageSize", pPageSize) :
                new ObjectParameter("pPageSize", typeof(int));
    
            var pPageIndexParameter = pPageIndex.HasValue ?
                new ObjectParameter("pPageIndex", pPageIndex) :
                new ObjectParameter("pPageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VendorSlider_SelectWhere_Result>("sp_VendorSlider_SelectWhere", pRefVendorIdParameter, pSearchParameter, pPageSizeParameter, pPageIndexParameter);
        }
    
        public virtual ObjectResult<sp_ProductMas_SelectWhere_Result> sp_ProductMas_SelectWhere(string pdefstr)
        {
            var pdefstrParameter = pdefstr != null ?
                new ObjectParameter("pdefstr", pdefstr) :
                new ObjectParameter("pdefstr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductMas_SelectWhere_Result>("sp_ProductMas_SelectWhere", pdefstrParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ProductImgDet_Save(Nullable<int> pProdImgId, Nullable<int> pRefProdId, string pImgName, Nullable<int> pOrd, Nullable<int> pUser, string pTerminal)
        {
            var pProdImgIdParameter = pProdImgId.HasValue ?
                new ObjectParameter("pProdImgId", pProdImgId) :
                new ObjectParameter("pProdImgId", typeof(int));
    
            var pRefProdIdParameter = pRefProdId.HasValue ?
                new ObjectParameter("pRefProdId", pRefProdId) :
                new ObjectParameter("pRefProdId", typeof(int));
    
            var pImgNameParameter = pImgName != null ?
                new ObjectParameter("pImgName", pImgName) :
                new ObjectParameter("pImgName", typeof(string));
    
            var pOrdParameter = pOrd.HasValue ?
                new ObjectParameter("pOrd", pOrd) :
                new ObjectParameter("pOrd", typeof(int));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ProductImgDet_Save", pProdImgIdParameter, pRefProdIdParameter, pImgNameParameter, pOrdParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_CatalogMas_SelectWhere_Result> sp_CatalogMas_SelectWhere(string pdefstr)
        {
            var pdefstrParameter = pdefstr != null ?
                new ObjectParameter("pdefstr", pdefstr) :
                new ObjectParameter("pdefstr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CatalogMas_SelectWhere_Result>("sp_CatalogMas_SelectWhere", pdefstrParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_AppLog_Save(Nullable<int> pRefAUId, Nullable<int> pRefVendorId, string pLogType, Nullable<int> pRefId, string pLogDesc, Nullable<int> pUser, string pTerminal)
        {
            var pRefAUIdParameter = pRefAUId.HasValue ?
                new ObjectParameter("pRefAUId", pRefAUId) :
                new ObjectParameter("pRefAUId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pLogTypeParameter = pLogType != null ?
                new ObjectParameter("pLogType", pLogType) :
                new ObjectParameter("pLogType", typeof(string));
    
            var pRefIdParameter = pRefId.HasValue ?
                new ObjectParameter("pRefId", pRefId) :
                new ObjectParameter("pRefId", typeof(int));
    
            var pLogDescParameter = pLogDesc != null ?
                new ObjectParameter("pLogDesc", pLogDesc) :
                new ObjectParameter("pLogDesc", typeof(string));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_AppLog_Save", pRefAUIdParameter, pRefVendorIdParameter, pLogTypeParameter, pRefIdParameter, pLogDescParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_AppUser_Save(Nullable<int> pAUId, string pAUName, string pCompanyName, string pAddress, string pLandMark, string pCountry, string pState, string pCity, string pPincode, string pContactNo1, string pContactNo2, string pMobileNo1, string pMobileNo2, string pEmailId, string pWebSite, string pGCMID, string pDeviceID, string pDeviceOS, Nullable<bool> pIsActive, Nullable<bool> pIsNotify, string pDefaultView, string pAppUserImg, Nullable<int> pUser, string pTerminal)
        {
            var pAUIdParameter = pAUId.HasValue ?
                new ObjectParameter("pAUId", pAUId) :
                new ObjectParameter("pAUId", typeof(int));
    
            var pAUNameParameter = pAUName != null ?
                new ObjectParameter("pAUName", pAUName) :
                new ObjectParameter("pAUName", typeof(string));
    
            var pCompanyNameParameter = pCompanyName != null ?
                new ObjectParameter("pCompanyName", pCompanyName) :
                new ObjectParameter("pCompanyName", typeof(string));
    
            var pAddressParameter = pAddress != null ?
                new ObjectParameter("pAddress", pAddress) :
                new ObjectParameter("pAddress", typeof(string));
    
            var pLandMarkParameter = pLandMark != null ?
                new ObjectParameter("pLandMark", pLandMark) :
                new ObjectParameter("pLandMark", typeof(string));
    
            var pCountryParameter = pCountry != null ?
                new ObjectParameter("pCountry", pCountry) :
                new ObjectParameter("pCountry", typeof(string));
    
            var pStateParameter = pState != null ?
                new ObjectParameter("pState", pState) :
                new ObjectParameter("pState", typeof(string));
    
            var pCityParameter = pCity != null ?
                new ObjectParameter("pCity", pCity) :
                new ObjectParameter("pCity", typeof(string));
    
            var pPincodeParameter = pPincode != null ?
                new ObjectParameter("pPincode", pPincode) :
                new ObjectParameter("pPincode", typeof(string));
    
            var pContactNo1Parameter = pContactNo1 != null ?
                new ObjectParameter("pContactNo1", pContactNo1) :
                new ObjectParameter("pContactNo1", typeof(string));
    
            var pContactNo2Parameter = pContactNo2 != null ?
                new ObjectParameter("pContactNo2", pContactNo2) :
                new ObjectParameter("pContactNo2", typeof(string));
    
            var pMobileNo1Parameter = pMobileNo1 != null ?
                new ObjectParameter("pMobileNo1", pMobileNo1) :
                new ObjectParameter("pMobileNo1", typeof(string));
    
            var pMobileNo2Parameter = pMobileNo2 != null ?
                new ObjectParameter("pMobileNo2", pMobileNo2) :
                new ObjectParameter("pMobileNo2", typeof(string));
    
            var pEmailIdParameter = pEmailId != null ?
                new ObjectParameter("pEmailId", pEmailId) :
                new ObjectParameter("pEmailId", typeof(string));
    
            var pWebSiteParameter = pWebSite != null ?
                new ObjectParameter("pWebSite", pWebSite) :
                new ObjectParameter("pWebSite", typeof(string));
    
            var pGCMIDParameter = pGCMID != null ?
                new ObjectParameter("pGCMID", pGCMID) :
                new ObjectParameter("pGCMID", typeof(string));
    
            var pDeviceIDParameter = pDeviceID != null ?
                new ObjectParameter("pDeviceID", pDeviceID) :
                new ObjectParameter("pDeviceID", typeof(string));
    
            var pDeviceOSParameter = pDeviceOS != null ?
                new ObjectParameter("pDeviceOS", pDeviceOS) :
                new ObjectParameter("pDeviceOS", typeof(string));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pIsNotifyParameter = pIsNotify.HasValue ?
                new ObjectParameter("pIsNotify", pIsNotify) :
                new ObjectParameter("pIsNotify", typeof(bool));
    
            var pDefaultViewParameter = pDefaultView != null ?
                new ObjectParameter("pDefaultView", pDefaultView) :
                new ObjectParameter("pDefaultView", typeof(string));
    
            var pAppUserImgParameter = pAppUserImg != null ?
                new ObjectParameter("pAppUserImg", pAppUserImg) :
                new ObjectParameter("pAppUserImg", typeof(string));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_AppUser_Save", pAUIdParameter, pAUNameParameter, pCompanyNameParameter, pAddressParameter, pLandMarkParameter, pCountryParameter, pStateParameter, pCityParameter, pPincodeParameter, pContactNo1Parameter, pContactNo2Parameter, pMobileNo1Parameter, pMobileNo2Parameter, pEmailIdParameter, pWebSiteParameter, pGCMIDParameter, pDeviceIDParameter, pDeviceOSParameter, pIsActiveParameter, pIsNotifyParameter, pDefaultViewParameter, pAppUserImgParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_AppUser_Select_Result> sp_AppUser_Select(Nullable<int> pAUId)
        {
            var pAUIdParameter = pAUId.HasValue ?
                new ObjectParameter("pAUId", pAUId) :
                new ObjectParameter("pAUId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AppUser_Select_Result>("sp_AppUser_Select", pAUIdParameter);
        }
    
        public virtual ObjectResult<sp_CatalogMas_Select_Result> sp_CatalogMas_Select(Nullable<int> pRefVendorId, string pRefCategory, Nullable<System.DateTime> pLastDate, Nullable<int> pPageSize, Nullable<int> pPageIndex)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pRefCategoryParameter = pRefCategory != null ?
                new ObjectParameter("pRefCategory", pRefCategory) :
                new ObjectParameter("pRefCategory", typeof(string));
    
            var pLastDateParameter = pLastDate.HasValue ?
                new ObjectParameter("pLastDate", pLastDate) :
                new ObjectParameter("pLastDate", typeof(System.DateTime));
    
            var pPageSizeParameter = pPageSize.HasValue ?
                new ObjectParameter("pPageSize", pPageSize) :
                new ObjectParameter("pPageSize", typeof(int));
    
            var pPageIndexParameter = pPageIndex.HasValue ?
                new ObjectParameter("pPageIndex", pPageIndex) :
                new ObjectParameter("pPageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CatalogMas_Select_Result>("sp_CatalogMas_Select", pRefVendorIdParameter, pRefCategoryParameter, pLastDateParameter, pPageSizeParameter, pPageIndexParameter);
        }
    
        public virtual ObjectResult<sp_MasterValue_GetMinMaxPrice_Result> sp_MasterValue_GetMinMaxPrice(Nullable<int> pRefVendorId, string pRefCategory)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pRefCategoryParameter = pRefCategory != null ?
                new ObjectParameter("pRefCategory", pRefCategory) :
                new ObjectParameter("pRefCategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MasterValue_GetMinMaxPrice_Result>("sp_MasterValue_GetMinMaxPrice", pRefVendorIdParameter, pRefCategoryParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_VendorAssociation_Save(Nullable<int> pRefAUId, string pVendorCode)
        {
            var pRefAUIdParameter = pRefAUId.HasValue ?
                new ObjectParameter("pRefAUId", pRefAUId) :
                new ObjectParameter("pRefAUId", typeof(int));
    
            var pVendorCodeParameter = pVendorCode != null ?
                new ObjectParameter("pVendorCode", pVendorCode) :
                new ObjectParameter("pVendorCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_VendorAssociation_Save", pRefAUIdParameter, pVendorCodeParameter);
        }
    
        public virtual ObjectResult<sp_VendorAssociation_Select_Result> sp_VendorAssociation_Select(Nullable<int> pAUId)
        {
            var pAUIdParameter = pAUId.HasValue ?
                new ObjectParameter("pAUId", pAUId) :
                new ObjectParameter("pAUId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VendorAssociation_Select_Result>("sp_VendorAssociation_Select", pAUIdParameter);
        }
    
        public virtual ObjectResult<sp_VendorAssociation_SelectWhere_Result> sp_VendorAssociation_SelectWhere(string pdefWhere)
        {
            var pdefWhereParameter = pdefWhere != null ?
                new ObjectParameter("pdefWhere", pdefWhere) :
                new ObjectParameter("pdefWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VendorAssociation_SelectWhere_Result>("sp_VendorAssociation_SelectWhere", pdefWhereParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_WriteToUs_Save(Nullable<int> pRefAUId, string pRemark, Nullable<int> pUser, string pTerminal)
        {
            var pRefAUIdParameter = pRefAUId.HasValue ?
                new ObjectParameter("pRefAUId", pRefAUId) :
                new ObjectParameter("pRefAUId", typeof(int));
    
            var pRemarkParameter = pRemark != null ?
                new ObjectParameter("pRemark", pRemark) :
                new ObjectParameter("pRemark", typeof(string));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_WriteToUs_Save", pRefAUIdParameter, pRemarkParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_CatalogMas_Filter_Result> sp_CatalogMas_Filter(Nullable<int> pRefVendorId, string pRefCategory, string pCatCode, Nullable<int> pPageSize, Nullable<int> pPageIndex, string pRefProdType, string pRefFabric, string pRefDesign, string pRefBrand, Nullable<decimal> pStartPrice, Nullable<decimal> pEndPrice, Nullable<bool> pFullSet, string pOrderBy)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pRefCategoryParameter = pRefCategory != null ?
                new ObjectParameter("pRefCategory", pRefCategory) :
                new ObjectParameter("pRefCategory", typeof(string));
    
            var pCatCodeParameter = pCatCode != null ?
                new ObjectParameter("pCatCode", pCatCode) :
                new ObjectParameter("pCatCode", typeof(string));
    
            var pPageSizeParameter = pPageSize.HasValue ?
                new ObjectParameter("pPageSize", pPageSize) :
                new ObjectParameter("pPageSize", typeof(int));
    
            var pPageIndexParameter = pPageIndex.HasValue ?
                new ObjectParameter("pPageIndex", pPageIndex) :
                new ObjectParameter("pPageIndex", typeof(int));
    
            var pRefProdTypeParameter = pRefProdType != null ?
                new ObjectParameter("pRefProdType", pRefProdType) :
                new ObjectParameter("pRefProdType", typeof(string));
    
            var pRefFabricParameter = pRefFabric != null ?
                new ObjectParameter("pRefFabric", pRefFabric) :
                new ObjectParameter("pRefFabric", typeof(string));
    
            var pRefDesignParameter = pRefDesign != null ?
                new ObjectParameter("pRefDesign", pRefDesign) :
                new ObjectParameter("pRefDesign", typeof(string));
    
            var pRefBrandParameter = pRefBrand != null ?
                new ObjectParameter("pRefBrand", pRefBrand) :
                new ObjectParameter("pRefBrand", typeof(string));
    
            var pStartPriceParameter = pStartPrice.HasValue ?
                new ObjectParameter("pStartPrice", pStartPrice) :
                new ObjectParameter("pStartPrice", typeof(decimal));
    
            var pEndPriceParameter = pEndPrice.HasValue ?
                new ObjectParameter("pEndPrice", pEndPrice) :
                new ObjectParameter("pEndPrice", typeof(decimal));
    
            var pFullSetParameter = pFullSet.HasValue ?
                new ObjectParameter("pFullSet", pFullSet) :
                new ObjectParameter("pFullSet", typeof(bool));
    
            var pOrderByParameter = pOrderBy != null ?
                new ObjectParameter("pOrderBy", pOrderBy) :
                new ObjectParameter("pOrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CatalogMas_Filter_Result>("sp_CatalogMas_Filter", pRefVendorIdParameter, pRefCategoryParameter, pCatCodeParameter, pPageSizeParameter, pPageIndexParameter, pRefProdTypeParameter, pRefFabricParameter, pRefDesignParameter, pRefBrandParameter, pStartPriceParameter, pEndPriceParameter, pFullSetParameter, pOrderByParameter);
        }
    
        public virtual ObjectResult<sp_ProductImgDet_SelectForAPI_Result> sp_ProductImgDet_SelectForAPI(Nullable<int> pRefProductId, string pFetchType)
        {
            var pRefProductIdParameter = pRefProductId.HasValue ?
                new ObjectParameter("pRefProductId", pRefProductId) :
                new ObjectParameter("pRefProductId", typeof(int));
    
            var pFetchTypeParameter = pFetchType != null ?
                new ObjectParameter("pFetchType", pFetchType) :
                new ObjectParameter("pFetchType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductImgDet_SelectForAPI_Result>("sp_ProductImgDet_SelectForAPI", pRefProductIdParameter, pFetchTypeParameter);
        }
    
        public virtual ObjectResult<sp_AppUser_SelectWhere_Result> sp_AppUser_SelectWhere(string pDeviceId)
        {
            var pDeviceIdParameter = pDeviceId != null ?
                new ObjectParameter("pDeviceId", pDeviceId) :
                new ObjectParameter("pDeviceId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AppUser_SelectWhere_Result>("sp_AppUser_SelectWhere", pDeviceIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ProductImgDet_Delete(Nullable<int> pRefProdId)
        {
            var pRefProdIdParameter = pRefProdId.HasValue ?
                new ObjectParameter("pRefProdId", pRefProdId) :
                new ObjectParameter("pRefProdId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ProductImgDet_Delete", pRefProdIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ProductCategory_Save(Nullable<int> pPCId, Nullable<int> pRefVendorId, string pProdCategoryName, string pProdCategoryDesc, Nullable<int> pRefPCId, Nullable<int> pOrd, string pProdCategoryImg, Nullable<int> pUser, string pTerminal)
        {
            var pPCIdParameter = pPCId.HasValue ?
                new ObjectParameter("pPCId", pPCId) :
                new ObjectParameter("pPCId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pProdCategoryNameParameter = pProdCategoryName != null ?
                new ObjectParameter("pProdCategoryName", pProdCategoryName) :
                new ObjectParameter("pProdCategoryName", typeof(string));
    
            var pProdCategoryDescParameter = pProdCategoryDesc != null ?
                new ObjectParameter("pProdCategoryDesc", pProdCategoryDesc) :
                new ObjectParameter("pProdCategoryDesc", typeof(string));
    
            var pRefPCIdParameter = pRefPCId.HasValue ?
                new ObjectParameter("pRefPCId", pRefPCId) :
                new ObjectParameter("pRefPCId", typeof(int));
    
            var pOrdParameter = pOrd.HasValue ?
                new ObjectParameter("pOrd", pOrd) :
                new ObjectParameter("pOrd", typeof(int));
    
            var pProdCategoryImgParameter = pProdCategoryImg != null ?
                new ObjectParameter("pProdCategoryImg", pProdCategoryImg) :
                new ObjectParameter("pProdCategoryImg", typeof(string));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ProductCategory_Save", pPCIdParameter, pRefVendorIdParameter, pProdCategoryNameParameter, pProdCategoryDescParameter, pRefPCIdParameter, pOrdParameter, pProdCategoryImgParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_VendorSlider_SelectForAPI_Result> sp_VendorSlider_SelectForAPI(Nullable<int> pRefVendorId)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VendorSlider_SelectForAPI_Result>("sp_VendorSlider_SelectForAPI", pRefVendorIdParameter);
        }
    
        public virtual ObjectResult<string> sp_WishList_Save(Nullable<int> pRefAUId, Nullable<int> pRefVendorId, Nullable<int> pRefProdId, Nullable<bool> pWishValue)
        {
            var pRefAUIdParameter = pRefAUId.HasValue ?
                new ObjectParameter("pRefAUId", pRefAUId) :
                new ObjectParameter("pRefAUId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pRefProdIdParameter = pRefProdId.HasValue ?
                new ObjectParameter("pRefProdId", pRefProdId) :
                new ObjectParameter("pRefProdId", typeof(int));
    
            var pWishValueParameter = pWishValue.HasValue ?
                new ObjectParameter("pWishValue", pWishValue) :
                new ObjectParameter("pWishValue", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_WishList_Save", pRefAUIdParameter, pRefVendorIdParameter, pRefProdIdParameter, pWishValueParameter);
        }
    
        public virtual ObjectResult<string> sp_EnquiryList_Save(Nullable<int> pId, Nullable<int> pRefAUId, Nullable<int> pRefVendorId, Nullable<int> pRefProdId, Nullable<int> pRefCatId, string pRemark, string pRepRemark, string pStatus)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pRefAUIdParameter = pRefAUId.HasValue ?
                new ObjectParameter("pRefAUId", pRefAUId) :
                new ObjectParameter("pRefAUId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pRefProdIdParameter = pRefProdId.HasValue ?
                new ObjectParameter("pRefProdId", pRefProdId) :
                new ObjectParameter("pRefProdId", typeof(int));
    
            var pRefCatIdParameter = pRefCatId.HasValue ?
                new ObjectParameter("pRefCatId", pRefCatId) :
                new ObjectParameter("pRefCatId", typeof(int));
    
            var pRemarkParameter = pRemark != null ?
                new ObjectParameter("pRemark", pRemark) :
                new ObjectParameter("pRemark", typeof(string));
    
            var pRepRemarkParameter = pRepRemark != null ?
                new ObjectParameter("pRepRemark", pRepRemark) :
                new ObjectParameter("pRepRemark", typeof(string));
    
            var pStatusParameter = pStatus != null ?
                new ObjectParameter("pStatus", pStatus) :
                new ObjectParameter("pStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_EnquiryList_Save", pIdParameter, pRefAUIdParameter, pRefVendorIdParameter, pRefProdIdParameter, pRefCatIdParameter, pRemarkParameter, pRepRemarkParameter, pStatusParameter);
        }
    
        public virtual ObjectResult<sp_ProductMas_Select_Result> sp_ProductMas_Select(Nullable<int> pRefAUId, Nullable<int> pRefVendorId, Nullable<int> pCatId, string pCategory, Nullable<System.DateTime> pLastDate, Nullable<int> pPageSize, Nullable<int> pPageIndex)
        {
            var pRefAUIdParameter = pRefAUId.HasValue ?
                new ObjectParameter("pRefAUId", pRefAUId) :
                new ObjectParameter("pRefAUId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pCatIdParameter = pCatId.HasValue ?
                new ObjectParameter("pCatId", pCatId) :
                new ObjectParameter("pCatId", typeof(int));
    
            var pCategoryParameter = pCategory != null ?
                new ObjectParameter("pCategory", pCategory) :
                new ObjectParameter("pCategory", typeof(string));
    
            var pLastDateParameter = pLastDate.HasValue ?
                new ObjectParameter("pLastDate", pLastDate) :
                new ObjectParameter("pLastDate", typeof(System.DateTime));
    
            var pPageSizeParameter = pPageSize.HasValue ?
                new ObjectParameter("pPageSize", pPageSize) :
                new ObjectParameter("pPageSize", typeof(int));
    
            var pPageIndexParameter = pPageIndex.HasValue ?
                new ObjectParameter("pPageIndex", pPageIndex) :
                new ObjectParameter("pPageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductMas_Select_Result>("sp_ProductMas_Select", pRefAUIdParameter, pRefVendorIdParameter, pCatIdParameter, pCategoryParameter, pLastDateParameter, pPageSizeParameter, pPageIndexParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_MenuRoleRights_Save(Nullable<int> pRefRoleId, Nullable<int> pRefMenuId, Nullable<bool> pCanInsert, Nullable<bool> pCanUpdate, Nullable<bool> pCanDelete, Nullable<bool> pCanView, Nullable<int> pUser, string pTerminal)
        {
            var pRefRoleIdParameter = pRefRoleId.HasValue ?
                new ObjectParameter("pRefRoleId", pRefRoleId) :
                new ObjectParameter("pRefRoleId", typeof(int));
    
            var pRefMenuIdParameter = pRefMenuId.HasValue ?
                new ObjectParameter("pRefMenuId", pRefMenuId) :
                new ObjectParameter("pRefMenuId", typeof(int));
    
            var pCanInsertParameter = pCanInsert.HasValue ?
                new ObjectParameter("pCanInsert", pCanInsert) :
                new ObjectParameter("pCanInsert", typeof(bool));
    
            var pCanUpdateParameter = pCanUpdate.HasValue ?
                new ObjectParameter("pCanUpdate", pCanUpdate) :
                new ObjectParameter("pCanUpdate", typeof(bool));
    
            var pCanDeleteParameter = pCanDelete.HasValue ?
                new ObjectParameter("pCanDelete", pCanDelete) :
                new ObjectParameter("pCanDelete", typeof(bool));
    
            var pCanViewParameter = pCanView.HasValue ?
                new ObjectParameter("pCanView", pCanView) :
                new ObjectParameter("pCanView", typeof(bool));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_MenuRoleRights_Save", pRefRoleIdParameter, pRefMenuIdParameter, pCanInsertParameter, pCanUpdateParameter, pCanDeleteParameter, pCanViewParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_RetrieveMenuRightsWise_Select_Result> sp_RetrieveMenuRightsWise_Select(string pUserName)
        {
            var pUserNameParameter = pUserName != null ?
                new ObjectParameter("pUserName", pUserName) :
                new ObjectParameter("pUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RetrieveMenuRightsWise_Select_Result>("sp_RetrieveMenuRightsWise_Select", pUserNameParameter);
        }
    
        public virtual ObjectResult<sp_ProductCategory_LazyLoad_Result> sp_ProductCategory_LazyLoad(Nullable<int> pRefVendorId, string pSearchtext, Nullable<int> pPageSize, Nullable<int> pPageIndex)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pSearchtextParameter = pSearchtext != null ?
                new ObjectParameter("pSearchtext", pSearchtext) :
                new ObjectParameter("pSearchtext", typeof(string));
    
            var pPageSizeParameter = pPageSize.HasValue ?
                new ObjectParameter("pPageSize", pPageSize) :
                new ObjectParameter("pPageSize", typeof(int));
    
            var pPageIndexParameter = pPageIndex.HasValue ?
                new ObjectParameter("pPageIndex", pPageIndex) :
                new ObjectParameter("pPageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductCategory_LazyLoad_Result>("sp_ProductCategory_LazyLoad", pRefVendorIdParameter, pSearchtextParameter, pPageSizeParameter, pPageIndexParameter);
        }
    
        public virtual ObjectResult<sp_MenuRoleRights_Select_Result> sp_MenuRoleRights_Select(Nullable<int> pRoleId)
        {
            var pRoleIdParameter = pRoleId.HasValue ?
                new ObjectParameter("pRoleId", pRoleId) :
                new ObjectParameter("pRoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MenuRoleRights_Select_Result>("sp_MenuRoleRights_Select", pRoleIdParameter);
        }
    
        public virtual ObjectResult<string> sp_Vendor_ResetCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_Vendor_ResetCode");
        }
    
        public virtual int sp_MenuRoleRights_Delete(Nullable<int> pRefRoleId)
        {
            var pRefRoleIdParameter = pRefRoleId.HasValue ?
                new ObjectParameter("pRefRoleId", pRefRoleId) :
                new ObjectParameter("pRefRoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MenuRoleRights_Delete", pRefRoleIdParameter);
        }
    
        public virtual ObjectResult<sp_AppUser_SelectBaseOnVendor_Result> sp_AppUser_SelectBaseOnVendor(string pSearch, string pVendorStatus, Nullable<int> pRefVendorId, Nullable<int> pPageSize, Nullable<int> pPageIndex)
        {
            var pSearchParameter = pSearch != null ?
                new ObjectParameter("pSearch", pSearch) :
                new ObjectParameter("pSearch", typeof(string));
    
            var pVendorStatusParameter = pVendorStatus != null ?
                new ObjectParameter("pVendorStatus", pVendorStatus) :
                new ObjectParameter("pVendorStatus", typeof(string));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pPageSizeParameter = pPageSize.HasValue ?
                new ObjectParameter("pPageSize", pPageSize) :
                new ObjectParameter("pPageSize", typeof(int));
    
            var pPageIndexParameter = pPageIndex.HasValue ?
                new ObjectParameter("pPageIndex", pPageIndex) :
                new ObjectParameter("pPageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AppUser_SelectBaseOnVendor_Result>("sp_AppUser_SelectBaseOnVendor", pSearchParameter, pVendorStatusParameter, pRefVendorIdParameter, pPageSizeParameter, pPageIndexParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_GroupMas_Save(Nullable<int> pGroupId, Nullable<int> pRefVendorId, string pGroupName, Nullable<int> pUser, string pTerminal)
        {
            var pGroupIdParameter = pGroupId.HasValue ?
                new ObjectParameter("pGroupId", pGroupId) :
                new ObjectParameter("pGroupId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pGroupNameParameter = pGroupName != null ?
                new ObjectParameter("pGroupName", pGroupName) :
                new ObjectParameter("pGroupName", typeof(string));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_GroupMas_Save", pGroupIdParameter, pRefVendorIdParameter, pGroupNameParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_GroupMas_SelectBaseOnVendor_Result> sp_GroupMas_SelectBaseOnVendor(string pSearch, Nullable<int> pRefVendorId)
        {
            var pSearchParameter = pSearch != null ?
                new ObjectParameter("pSearch", pSearch) :
                new ObjectParameter("pSearch", typeof(string));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupMas_SelectBaseOnVendor_Result>("sp_GroupMas_SelectBaseOnVendor", pSearchParameter, pRefVendorIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_GroupContact_DeleteBaseOnGroupId(Nullable<int> pRefGroupId)
        {
            var pRefGroupIdParameter = pRefGroupId.HasValue ?
                new ObjectParameter("pRefGroupId", pRefGroupId) :
                new ObjectParameter("pRefGroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_GroupContact_DeleteBaseOnGroupId", pRefGroupIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_GroupContact_Save(Nullable<int> pId, Nullable<int> pRefGroupId, Nullable<int> pRefAUId, Nullable<int> pUser, string pTerminal)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pRefGroupIdParameter = pRefGroupId.HasValue ?
                new ObjectParameter("pRefGroupId", pRefGroupId) :
                new ObjectParameter("pRefGroupId", typeof(int));
    
            var pRefAUIdParameter = pRefAUId.HasValue ?
                new ObjectParameter("pRefAUId", pRefAUId) :
                new ObjectParameter("pRefAUId", typeof(int));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_GroupContact_Save", pIdParameter, pRefGroupIdParameter, pRefAUIdParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_GroupContact_SelectBaseOnGroupId_Result> sp_GroupContact_SelectBaseOnGroupId(Nullable<int> pGroupId)
        {
            var pGroupIdParameter = pGroupId.HasValue ?
                new ObjectParameter("pGroupId", pGroupId) :
                new ObjectParameter("pGroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupContact_SelectBaseOnGroupId_Result>("sp_GroupContact_SelectBaseOnGroupId", pGroupIdParameter);
        }
    
        public virtual ObjectResult<sp_VendorAssociation_SelectBaseOnVendor_Result> sp_VendorAssociation_SelectBaseOnVendor(Nullable<int> pVendorId, Nullable<int> pGroupId)
        {
            var pVendorIdParameter = pVendorId.HasValue ?
                new ObjectParameter("pVendorId", pVendorId) :
                new ObjectParameter("pVendorId", typeof(int));
    
            var pGroupIdParameter = pGroupId.HasValue ?
                new ObjectParameter("pGroupId", pGroupId) :
                new ObjectParameter("pGroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VendorAssociation_SelectBaseOnVendor_Result>("sp_VendorAssociation_SelectBaseOnVendor", pVendorIdParameter, pGroupIdParameter);
        }
    
        public virtual ObjectResult<sp_WishList_Select_Result> sp_WishList_Select(Nullable<int> pRefAUId, Nullable<int> pRefVendorId)
        {
            var pRefAUIdParameter = pRefAUId.HasValue ?
                new ObjectParameter("pRefAUId", pRefAUId) :
                new ObjectParameter("pRefAUId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_WishList_Select_Result>("sp_WishList_Select", pRefAUIdParameter, pRefVendorIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ProductMas_Save(Nullable<int> pProdId, string pProdName, Nullable<int> pRefVendorId, Nullable<int> pRefCatId, string pProdCode, string pProdDescription, string pRefProdCategory, string pRefColor, string pRefProdType, string pRefSize, string pRefFabric, string pRefDesign, string pRefBrand, string pCelebrity, string pProdImgPath, Nullable<System.DateTime> pActivetillDate, Nullable<bool> pIsActive, Nullable<decimal> pRetailPrice, Nullable<decimal> pWholeSalePrice, Nullable<int> pUser, string pTerminal)
        {
            var pProdIdParameter = pProdId.HasValue ?
                new ObjectParameter("pProdId", pProdId) :
                new ObjectParameter("pProdId", typeof(int));
    
            var pProdNameParameter = pProdName != null ?
                new ObjectParameter("pProdName", pProdName) :
                new ObjectParameter("pProdName", typeof(string));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pRefCatIdParameter = pRefCatId.HasValue ?
                new ObjectParameter("pRefCatId", pRefCatId) :
                new ObjectParameter("pRefCatId", typeof(int));
    
            var pProdCodeParameter = pProdCode != null ?
                new ObjectParameter("pProdCode", pProdCode) :
                new ObjectParameter("pProdCode", typeof(string));
    
            var pProdDescriptionParameter = pProdDescription != null ?
                new ObjectParameter("pProdDescription", pProdDescription) :
                new ObjectParameter("pProdDescription", typeof(string));
    
            var pRefProdCategoryParameter = pRefProdCategory != null ?
                new ObjectParameter("pRefProdCategory", pRefProdCategory) :
                new ObjectParameter("pRefProdCategory", typeof(string));
    
            var pRefColorParameter = pRefColor != null ?
                new ObjectParameter("pRefColor", pRefColor) :
                new ObjectParameter("pRefColor", typeof(string));
    
            var pRefProdTypeParameter = pRefProdType != null ?
                new ObjectParameter("pRefProdType", pRefProdType) :
                new ObjectParameter("pRefProdType", typeof(string));
    
            var pRefSizeParameter = pRefSize != null ?
                new ObjectParameter("pRefSize", pRefSize) :
                new ObjectParameter("pRefSize", typeof(string));
    
            var pRefFabricParameter = pRefFabric != null ?
                new ObjectParameter("pRefFabric", pRefFabric) :
                new ObjectParameter("pRefFabric", typeof(string));
    
            var pRefDesignParameter = pRefDesign != null ?
                new ObjectParameter("pRefDesign", pRefDesign) :
                new ObjectParameter("pRefDesign", typeof(string));
    
            var pRefBrandParameter = pRefBrand != null ?
                new ObjectParameter("pRefBrand", pRefBrand) :
                new ObjectParameter("pRefBrand", typeof(string));
    
            var pCelebrityParameter = pCelebrity != null ?
                new ObjectParameter("pCelebrity", pCelebrity) :
                new ObjectParameter("pCelebrity", typeof(string));
    
            var pProdImgPathParameter = pProdImgPath != null ?
                new ObjectParameter("pProdImgPath", pProdImgPath) :
                new ObjectParameter("pProdImgPath", typeof(string));
    
            var pActivetillDateParameter = pActivetillDate.HasValue ?
                new ObjectParameter("pActivetillDate", pActivetillDate) :
                new ObjectParameter("pActivetillDate", typeof(System.DateTime));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pRetailPriceParameter = pRetailPrice.HasValue ?
                new ObjectParameter("pRetailPrice", pRetailPrice) :
                new ObjectParameter("pRetailPrice", typeof(decimal));
    
            var pWholeSalePriceParameter = pWholeSalePrice.HasValue ?
                new ObjectParameter("pWholeSalePrice", pWholeSalePrice) :
                new ObjectParameter("pWholeSalePrice", typeof(decimal));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ProductMas_Save", pProdIdParameter, pProdNameParameter, pRefVendorIdParameter, pRefCatIdParameter, pProdCodeParameter, pProdDescriptionParameter, pRefProdCategoryParameter, pRefColorParameter, pRefProdTypeParameter, pRefSizeParameter, pRefFabricParameter, pRefDesignParameter, pRefBrandParameter, pCelebrityParameter, pProdImgPathParameter, pActivetillDateParameter, pIsActiveParameter, pRetailPriceParameter, pWholeSalePriceParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_VendorAssociation_Rate(Nullable<int> pVendorId, Nullable<int> pAUId, Nullable<int> pRate)
        {
            var pVendorIdParameter = pVendorId.HasValue ?
                new ObjectParameter("pVendorId", pVendorId) :
                new ObjectParameter("pVendorId", typeof(int));
    
            var pAUIdParameter = pAUId.HasValue ?
                new ObjectParameter("pAUId", pAUId) :
                new ObjectParameter("pAUId", typeof(int));
    
            var pRateParameter = pRate.HasValue ?
                new ObjectParameter("pRate", pRate) :
                new ObjectParameter("pRate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_VendorAssociation_Rate", pVendorIdParameter, pAUIdParameter, pRateParameter);
        }
    
        public virtual ObjectResult<sp_NotificationMas_Select_Result> sp_NotificationMas_Select(Nullable<int> pRefVendorId)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_NotificationMas_Select_Result>("sp_NotificationMas_Select", pRefVendorIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_Notification_Save(Nullable<int> pNotifyId, Nullable<int> pRefVendorId, Nullable<System.DateTime> pNotifyDate, string pRefGroupId, string pRefAppUserId, string pMessage, string pImgPath, Nullable<int> pUser, string pTerminal)
        {
            var pNotifyIdParameter = pNotifyId.HasValue ?
                new ObjectParameter("pNotifyId", pNotifyId) :
                new ObjectParameter("pNotifyId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pNotifyDateParameter = pNotifyDate.HasValue ?
                new ObjectParameter("pNotifyDate", pNotifyDate) :
                new ObjectParameter("pNotifyDate", typeof(System.DateTime));
    
            var pRefGroupIdParameter = pRefGroupId != null ?
                new ObjectParameter("pRefGroupId", pRefGroupId) :
                new ObjectParameter("pRefGroupId", typeof(string));
    
            var pRefAppUserIdParameter = pRefAppUserId != null ?
                new ObjectParameter("pRefAppUserId", pRefAppUserId) :
                new ObjectParameter("pRefAppUserId", typeof(string));
    
            var pMessageParameter = pMessage != null ?
                new ObjectParameter("pMessage", pMessage) :
                new ObjectParameter("pMessage", typeof(string));
    
            var pImgPathParameter = pImgPath != null ?
                new ObjectParameter("pImgPath", pImgPath) :
                new ObjectParameter("pImgPath", typeof(string));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_Notification_Save", pNotifyIdParameter, pRefVendorIdParameter, pNotifyDateParameter, pRefGroupIdParameter, pRefAppUserIdParameter, pMessageParameter, pImgPathParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_EnquiryList_SelectWhere_Result> sp_EnquiryList_SelectWhere(string pdefstr)
        {
            var pdefstrParameter = pdefstr != null ?
                new ObjectParameter("pdefstr", pdefstr) :
                new ObjectParameter("pdefstr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EnquiryList_SelectWhere_Result>("sp_EnquiryList_SelectWhere", pdefstrParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Vendor_Save(Nullable<int> pVendorId, string pVendorName, string pUserName, string pVendorCode, string pAddress, string pLandMark, string pCountry, string pState, string pCity, string pPincode, string pContactName, string pContactNo1, string pContactNo2, string pMobileNo1, string pMobileNo2, string pFaxNo, string pEmailId, string pWebSite, string pLogoImg, Nullable<bool> pIsActive, string pSubscriptionType, string pReferenceCode, string pAboutUs, string pProdDispName, string pCatDispName, string pBGImage, Nullable<int> pUser, string pTerminal)
        {
            var pVendorIdParameter = pVendorId.HasValue ?
                new ObjectParameter("pVendorId", pVendorId) :
                new ObjectParameter("pVendorId", typeof(int));
    
            var pVendorNameParameter = pVendorName != null ?
                new ObjectParameter("pVendorName", pVendorName) :
                new ObjectParameter("pVendorName", typeof(string));
    
            var pUserNameParameter = pUserName != null ?
                new ObjectParameter("pUserName", pUserName) :
                new ObjectParameter("pUserName", typeof(string));
    
            var pVendorCodeParameter = pVendorCode != null ?
                new ObjectParameter("pVendorCode", pVendorCode) :
                new ObjectParameter("pVendorCode", typeof(string));
    
            var pAddressParameter = pAddress != null ?
                new ObjectParameter("pAddress", pAddress) :
                new ObjectParameter("pAddress", typeof(string));
    
            var pLandMarkParameter = pLandMark != null ?
                new ObjectParameter("pLandMark", pLandMark) :
                new ObjectParameter("pLandMark", typeof(string));
    
            var pCountryParameter = pCountry != null ?
                new ObjectParameter("pCountry", pCountry) :
                new ObjectParameter("pCountry", typeof(string));
    
            var pStateParameter = pState != null ?
                new ObjectParameter("pState", pState) :
                new ObjectParameter("pState", typeof(string));
    
            var pCityParameter = pCity != null ?
                new ObjectParameter("pCity", pCity) :
                new ObjectParameter("pCity", typeof(string));
    
            var pPincodeParameter = pPincode != null ?
                new ObjectParameter("pPincode", pPincode) :
                new ObjectParameter("pPincode", typeof(string));
    
            var pContactNameParameter = pContactName != null ?
                new ObjectParameter("pContactName", pContactName) :
                new ObjectParameter("pContactName", typeof(string));
    
            var pContactNo1Parameter = pContactNo1 != null ?
                new ObjectParameter("pContactNo1", pContactNo1) :
                new ObjectParameter("pContactNo1", typeof(string));
    
            var pContactNo2Parameter = pContactNo2 != null ?
                new ObjectParameter("pContactNo2", pContactNo2) :
                new ObjectParameter("pContactNo2", typeof(string));
    
            var pMobileNo1Parameter = pMobileNo1 != null ?
                new ObjectParameter("pMobileNo1", pMobileNo1) :
                new ObjectParameter("pMobileNo1", typeof(string));
    
            var pMobileNo2Parameter = pMobileNo2 != null ?
                new ObjectParameter("pMobileNo2", pMobileNo2) :
                new ObjectParameter("pMobileNo2", typeof(string));
    
            var pFaxNoParameter = pFaxNo != null ?
                new ObjectParameter("pFaxNo", pFaxNo) :
                new ObjectParameter("pFaxNo", typeof(string));
    
            var pEmailIdParameter = pEmailId != null ?
                new ObjectParameter("pEmailId", pEmailId) :
                new ObjectParameter("pEmailId", typeof(string));
    
            var pWebSiteParameter = pWebSite != null ?
                new ObjectParameter("pWebSite", pWebSite) :
                new ObjectParameter("pWebSite", typeof(string));
    
            var pLogoImgParameter = pLogoImg != null ?
                new ObjectParameter("pLogoImg", pLogoImg) :
                new ObjectParameter("pLogoImg", typeof(string));
    
            var pIsActiveParameter = pIsActive.HasValue ?
                new ObjectParameter("pIsActive", pIsActive) :
                new ObjectParameter("pIsActive", typeof(bool));
    
            var pSubscriptionTypeParameter = pSubscriptionType != null ?
                new ObjectParameter("pSubscriptionType", pSubscriptionType) :
                new ObjectParameter("pSubscriptionType", typeof(string));
    
            var pReferenceCodeParameter = pReferenceCode != null ?
                new ObjectParameter("pReferenceCode", pReferenceCode) :
                new ObjectParameter("pReferenceCode", typeof(string));
    
            var pAboutUsParameter = pAboutUs != null ?
                new ObjectParameter("pAboutUs", pAboutUs) :
                new ObjectParameter("pAboutUs", typeof(string));
    
            var pProdDispNameParameter = pProdDispName != null ?
                new ObjectParameter("pProdDispName", pProdDispName) :
                new ObjectParameter("pProdDispName", typeof(string));
    
            var pCatDispNameParameter = pCatDispName != null ?
                new ObjectParameter("pCatDispName", pCatDispName) :
                new ObjectParameter("pCatDispName", typeof(string));
    
            var pBGImageParameter = pBGImage != null ?
                new ObjectParameter("pBGImage", pBGImage) :
                new ObjectParameter("pBGImage", typeof(string));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Vendor_Save", pVendorIdParameter, pVendorNameParameter, pUserNameParameter, pVendorCodeParameter, pAddressParameter, pLandMarkParameter, pCountryParameter, pStateParameter, pCityParameter, pPincodeParameter, pContactNameParameter, pContactNo1Parameter, pContactNo2Parameter, pMobileNo1Parameter, pMobileNo2Parameter, pFaxNoParameter, pEmailIdParameter, pWebSiteParameter, pLogoImgParameter, pIsActiveParameter, pSubscriptionTypeParameter, pReferenceCodeParameter, pAboutUsParameter, pProdDispNameParameter, pCatDispNameParameter, pBGImageParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_Subscription_SelectBaseOnType_Result> sp_Subscription_SelectBaseOnType(string pSubType)
        {
            var pSubTypeParameter = pSubType != null ?
                new ObjectParameter("pSubType", pSubType) :
                new ObjectParameter("pSubType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Subscription_SelectBaseOnType_Result>("sp_Subscription_SelectBaseOnType", pSubTypeParameter);
        }
    
        public virtual ObjectResult<sp_EnquiryList_SelectForAPI_Result> sp_EnquiryList_SelectForAPI(Nullable<int> pRefAUId, Nullable<int> pRefVendoreId)
        {
            var pRefAUIdParameter = pRefAUId.HasValue ?
                new ObjectParameter("pRefAUId", pRefAUId) :
                new ObjectParameter("pRefAUId", typeof(int));
    
            var pRefVendoreIdParameter = pRefVendoreId.HasValue ?
                new ObjectParameter("pRefVendoreId", pRefVendoreId) :
                new ObjectParameter("pRefVendoreId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EnquiryList_SelectForAPI_Result>("sp_EnquiryList_SelectForAPI", pRefAUIdParameter, pRefVendoreIdParameter);
        }
    
        public virtual ObjectResult<sp_DeleteLog_SelectBaseOnDate_Result> sp_DeleteLog_SelectBaseOnDate(Nullable<int> pRefVendorId, string pFlag, Nullable<System.DateTime> pLastDate)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pFlagParameter = pFlag != null ?
                new ObjectParameter("pFlag", pFlag) :
                new ObjectParameter("pFlag", typeof(string));
    
            var pLastDateParameter = pLastDate.HasValue ?
                new ObjectParameter("pLastDate", pLastDate) :
                new ObjectParameter("pLastDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DeleteLog_SelectBaseOnDate_Result>("sp_DeleteLog_SelectBaseOnDate", pRefVendorIdParameter, pFlagParameter, pLastDateParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_DeleteLog_Save(Nullable<int> pRefVendorId, string pFlag, Nullable<int> pRId, string pTerminal)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pFlagParameter = pFlag != null ?
                new ObjectParameter("pFlag", pFlag) :
                new ObjectParameter("pFlag", typeof(string));
    
            var pRIdParameter = pRId.HasValue ?
                new ObjectParameter("pRId", pRId) :
                new ObjectParameter("pRId", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_DeleteLog_Save", pRefVendorIdParameter, pFlagParameter, pRIdParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_AppLog_DailyAppVisitor_Result> sp_AppLog_DailyAppVisitor(Nullable<int> pRefVendorId)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AppLog_DailyAppVisitor_Result>("sp_AppLog_DailyAppVisitor", pRefVendorIdParameter);
        }
    
        public virtual ObjectResult<sp_AppLog_DailyAppVisitorPerDay_Result> sp_AppLog_DailyAppVisitorPerDay(Nullable<int> pRefVendorId)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AppLog_DailyAppVisitorPerDay_Result>("sp_AppLog_DailyAppVisitorPerDay", pRefVendorIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_StoreAssociation_Save(Nullable<int> pRefVendorId, string pStoreCode, string pTerminal)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pStoreCodeParameter = pStoreCode != null ?
                new ObjectParameter("pStoreCode", pStoreCode) :
                new ObjectParameter("pStoreCode", typeof(string));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_StoreAssociation_Save", pRefVendorIdParameter, pStoreCodeParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_StoreAssociation_SelectWhereWithLazyload_Result> sp_StoreAssociation_SelectWhereWithLazyload(string pSearch, Nullable<int> pPageSize, Nullable<int> pPageIndex, string pdefstr)
        {
            var pSearchParameter = pSearch != null ?
                new ObjectParameter("pSearch", pSearch) :
                new ObjectParameter("pSearch", typeof(string));
    
            var pPageSizeParameter = pPageSize.HasValue ?
                new ObjectParameter("pPageSize", pPageSize) :
                new ObjectParameter("pPageSize", typeof(int));
    
            var pPageIndexParameter = pPageIndex.HasValue ?
                new ObjectParameter("pPageIndex", pPageIndex) :
                new ObjectParameter("pPageIndex", typeof(int));
    
            var pdefstrParameter = pdefstr != null ?
                new ObjectParameter("pdefstr", pdefstr) :
                new ObjectParameter("pdefstr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_StoreAssociation_SelectWhereWithLazyload_Result>("sp_StoreAssociation_SelectWhereWithLazyload", pSearchParameter, pPageSizeParameter, pPageIndexParameter, pdefstrParameter);
        }
    
        public virtual ObjectResult<sp_StoreAssociation_SelectWhere_Result> sp_StoreAssociation_SelectWhere(string pdefstr)
        {
            var pdefstrParameter = pdefstr != null ?
                new ObjectParameter("pdefstr", pdefstr) :
                new ObjectParameter("pdefstr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_StoreAssociation_SelectWhere_Result>("sp_StoreAssociation_SelectWhere", pdefstrParameter);
        }
    
        public virtual ObjectResult<sp_ParameterMapping_Select_Result> sp_ParameterMapping_Select(Nullable<int> pRefStoreId, Nullable<int> pRefVendorId, Nullable<int> pRefMasterId, Nullable<int> pRefCatId)
        {
            var pRefStoreIdParameter = pRefStoreId.HasValue ?
                new ObjectParameter("pRefStoreId", pRefStoreId) :
                new ObjectParameter("pRefStoreId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pRefMasterIdParameter = pRefMasterId.HasValue ?
                new ObjectParameter("pRefMasterId", pRefMasterId) :
                new ObjectParameter("pRefMasterId", typeof(int));
    
            var pRefCatIdParameter = pRefCatId.HasValue ?
                new ObjectParameter("pRefCatId", pRefCatId) :
                new ObjectParameter("pRefCatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ParameterMapping_Select_Result>("sp_ParameterMapping_Select", pRefStoreIdParameter, pRefVendorIdParameter, pRefMasterIdParameter, pRefCatIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ParameterMapping_Save(Nullable<int> pId, Nullable<int> pRefMasterId, Nullable<int> pRefVendorId, Nullable<int> pRefStoreId, Nullable<int> pRefVendorValId, Nullable<int> pRefStoreValId, Nullable<int> pUser, string pTerminal)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("pId", pId) :
                new ObjectParameter("pId", typeof(int));
    
            var pRefMasterIdParameter = pRefMasterId.HasValue ?
                new ObjectParameter("pRefMasterId", pRefMasterId) :
                new ObjectParameter("pRefMasterId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pRefStoreIdParameter = pRefStoreId.HasValue ?
                new ObjectParameter("pRefStoreId", pRefStoreId) :
                new ObjectParameter("pRefStoreId", typeof(int));
    
            var pRefVendorValIdParameter = pRefVendorValId.HasValue ?
                new ObjectParameter("pRefVendorValId", pRefVendorValId) :
                new ObjectParameter("pRefVendorValId", typeof(int));
    
            var pRefStoreValIdParameter = pRefStoreValId.HasValue ?
                new ObjectParameter("pRefStoreValId", pRefStoreValId) :
                new ObjectParameter("pRefStoreValId", typeof(int));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ParameterMapping_Save", pIdParameter, pRefMasterIdParameter, pRefVendorIdParameter, pRefStoreIdParameter, pRefVendorValIdParameter, pRefStoreValIdParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_ProductMerege_Save_Result> sp_ProductMerege_Save(Nullable<int> pRefStoreId, Nullable<int> pRefVendorId, Nullable<int> pRefCatId, string pCatCode, string pCatName, string pCatDescription, Nullable<System.DateTime> pCatLaunchDate, Nullable<bool> pIsFullset, Nullable<int> pUser, string pTerminal)
        {
            var pRefStoreIdParameter = pRefStoreId.HasValue ?
                new ObjectParameter("pRefStoreId", pRefStoreId) :
                new ObjectParameter("pRefStoreId", typeof(int));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pRefCatIdParameter = pRefCatId.HasValue ?
                new ObjectParameter("pRefCatId", pRefCatId) :
                new ObjectParameter("pRefCatId", typeof(int));
    
            var pCatCodeParameter = pCatCode != null ?
                new ObjectParameter("pCatCode", pCatCode) :
                new ObjectParameter("pCatCode", typeof(string));
    
            var pCatNameParameter = pCatName != null ?
                new ObjectParameter("pCatName", pCatName) :
                new ObjectParameter("pCatName", typeof(string));
    
            var pCatDescriptionParameter = pCatDescription != null ?
                new ObjectParameter("pCatDescription", pCatDescription) :
                new ObjectParameter("pCatDescription", typeof(string));
    
            var pCatLaunchDateParameter = pCatLaunchDate.HasValue ?
                new ObjectParameter("pCatLaunchDate", pCatLaunchDate) :
                new ObjectParameter("pCatLaunchDate", typeof(System.DateTime));
    
            var pIsFullsetParameter = pIsFullset.HasValue ?
                new ObjectParameter("pIsFullset", pIsFullset) :
                new ObjectParameter("pIsFullset", typeof(bool));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductMerege_Save_Result>("sp_ProductMerege_Save", pRefStoreIdParameter, pRefVendorIdParameter, pRefCatIdParameter, pCatCodeParameter, pCatNameParameter, pCatDescriptionParameter, pCatLaunchDateParameter, pIsFullsetParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_ProductMaster_SaveFromStore_Result> sp_ProductMaster_SaveFromStore(Nullable<int> pRefStoreId, Nullable<int> pProdId, string pProdName, Nullable<int> pRefVendorId, Nullable<int> pRefCatId, string pProdCode, string pProdDescription, string pRefProdCategory, string pRefColor, string pRefProdType, string pRefSize, string pRefFabric, string pRefDesign, string pRefBrand, string pCelebrity, Nullable<System.DateTime> pActivetillDate, Nullable<decimal> pRetailPrice, Nullable<decimal> pWholeSalePrice, Nullable<int> pUser, string pTerminal)
        {
            var pRefStoreIdParameter = pRefStoreId.HasValue ?
                new ObjectParameter("pRefStoreId", pRefStoreId) :
                new ObjectParameter("pRefStoreId", typeof(int));
    
            var pProdIdParameter = pProdId.HasValue ?
                new ObjectParameter("pProdId", pProdId) :
                new ObjectParameter("pProdId", typeof(int));
    
            var pProdNameParameter = pProdName != null ?
                new ObjectParameter("pProdName", pProdName) :
                new ObjectParameter("pProdName", typeof(string));
    
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            var pRefCatIdParameter = pRefCatId.HasValue ?
                new ObjectParameter("pRefCatId", pRefCatId) :
                new ObjectParameter("pRefCatId", typeof(int));
    
            var pProdCodeParameter = pProdCode != null ?
                new ObjectParameter("pProdCode", pProdCode) :
                new ObjectParameter("pProdCode", typeof(string));
    
            var pProdDescriptionParameter = pProdDescription != null ?
                new ObjectParameter("pProdDescription", pProdDescription) :
                new ObjectParameter("pProdDescription", typeof(string));
    
            var pRefProdCategoryParameter = pRefProdCategory != null ?
                new ObjectParameter("pRefProdCategory", pRefProdCategory) :
                new ObjectParameter("pRefProdCategory", typeof(string));
    
            var pRefColorParameter = pRefColor != null ?
                new ObjectParameter("pRefColor", pRefColor) :
                new ObjectParameter("pRefColor", typeof(string));
    
            var pRefProdTypeParameter = pRefProdType != null ?
                new ObjectParameter("pRefProdType", pRefProdType) :
                new ObjectParameter("pRefProdType", typeof(string));
    
            var pRefSizeParameter = pRefSize != null ?
                new ObjectParameter("pRefSize", pRefSize) :
                new ObjectParameter("pRefSize", typeof(string));
    
            var pRefFabricParameter = pRefFabric != null ?
                new ObjectParameter("pRefFabric", pRefFabric) :
                new ObjectParameter("pRefFabric", typeof(string));
    
            var pRefDesignParameter = pRefDesign != null ?
                new ObjectParameter("pRefDesign", pRefDesign) :
                new ObjectParameter("pRefDesign", typeof(string));
    
            var pRefBrandParameter = pRefBrand != null ?
                new ObjectParameter("pRefBrand", pRefBrand) :
                new ObjectParameter("pRefBrand", typeof(string));
    
            var pCelebrityParameter = pCelebrity != null ?
                new ObjectParameter("pCelebrity", pCelebrity) :
                new ObjectParameter("pCelebrity", typeof(string));
    
            var pActivetillDateParameter = pActivetillDate.HasValue ?
                new ObjectParameter("pActivetillDate", pActivetillDate) :
                new ObjectParameter("pActivetillDate", typeof(System.DateTime));
    
            var pRetailPriceParameter = pRetailPrice.HasValue ?
                new ObjectParameter("pRetailPrice", pRetailPrice) :
                new ObjectParameter("pRetailPrice", typeof(decimal));
    
            var pWholeSalePriceParameter = pWholeSalePrice.HasValue ?
                new ObjectParameter("pWholeSalePrice", pWholeSalePrice) :
                new ObjectParameter("pWholeSalePrice", typeof(decimal));
    
            var pUserParameter = pUser.HasValue ?
                new ObjectParameter("pUser", pUser) :
                new ObjectParameter("pUser", typeof(int));
    
            var pTerminalParameter = pTerminal != null ?
                new ObjectParameter("pTerminal", pTerminal) :
                new ObjectParameter("pTerminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductMaster_SaveFromStore_Result>("sp_ProductMaster_SaveFromStore", pRefStoreIdParameter, pProdIdParameter, pProdNameParameter, pRefVendorIdParameter, pRefCatIdParameter, pProdCodeParameter, pProdDescriptionParameter, pRefProdCategoryParameter, pRefColorParameter, pRefProdTypeParameter, pRefSizeParameter, pRefFabricParameter, pRefDesignParameter, pRefBrandParameter, pCelebrityParameter, pActivetillDateParameter, pRetailPriceParameter, pWholeSalePriceParameter, pUserParameter, pTerminalParameter);
        }
    
        public virtual ObjectResult<sp_VendorAssociation_MostVisitedUser_Result> sp_VendorAssociation_MostVisitedUser(Nullable<int> pRefVendorId)
        {
            var pRefVendorIdParameter = pRefVendorId.HasValue ?
                new ObjectParameter("pRefVendorId", pRefVendorId) :
                new ObjectParameter("pRefVendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VendorAssociation_MostVisitedUser_Result>("sp_VendorAssociation_MostVisitedUser", pRefVendorIdParameter);
        }
    
        public virtual ObjectResult<sp_VendorSubDet_SelectWhere_Result> sp_VendorSubDet_SelectWhere(string pdefstr)
        {
            var pdefstrParameter = pdefstr != null ?
                new ObjectParameter("pdefstr", pdefstr) :
                new ObjectParameter("pdefstr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VendorSubDet_SelectWhere_Result>("sp_VendorSubDet_SelectWhere", pdefstrParameter);
        }
    }
}
