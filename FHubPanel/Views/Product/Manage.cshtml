@using FHubPanel.Models;
@model ProductModel

@{
    //ViewBag.Title = "Manage";
}


<div class="content-wrapper" style="min-height: 946px;">

    <section class="content">
        @using (Html.BeginForm("Save", "Product", FormMethod.Post, new { id = "myform", @class = "", enctype = "multipart/form-data" }))
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-primary">
                        <div class="box-body">

                            <div class="col-md-12">
                                <div class="box-header with-border box-info">
                                    <i class="@ViewBag.Icon"></i>
                                    <h3 class="box-title"><b>@ViewBag.MasterType</b> </h3>
                                </div>
                                @Html.HiddenFor(Model => Model.ProdId)
                                @Html.HiddenFor(Model => Model.ProdImgPath)
                                @Html.HiddenFor(Model => Model.ChangeImgId)
                                @Html.HiddenFor(Model => Model.RefVendorId)
                                @Html.HiddenFor(Model => Model.RefColor)
                                @Html.HiddenFor(Model => Model.RefSize)
                                @Html.HiddenFor(Model => Model.InsUser)
                                @Html.HiddenFor(Model => Model.InsTerminal)
                                @Html.HiddenFor(Model => Model.InsDate)
                                @Html.HiddenFor(Model => Model.UpdUser)
                                @Html.HiddenFor(Model => Model.UpdTerminal)
                                @Html.HiddenFor(Model => Model.UpdDate)

                                <div class="col-md-12">
                                    <div class="col-md-3 ">
                                        <div class="row" style="margin-top:10px !important">
                                            @*<div class="col-md-3">*@
                                            <img id="imgLogo" src="@Html.DisplayFor(Model => Model.FullImgPath)" class="center-block" style="max-width:50%" />
                                            <div class="form-group">
                                                @*<label>Logo</label>*@
                                                @*~/Content/dist/img/default-50x50.gif*@

                                                <input type="file" name="fileLogo" id="fleLogo" class="center-block" value="" style="margin-top: 10px;" />
                                            </div>
                                            @*</div>*@
                                        </div>

                                        <div id="productimgdet">
                                            @Html.Partial("ProductImageListPartial", new List<sp_ProductImgDet_SelectForAPI_Result>())
                                        </div>
                                    </div>
                                    <div class="col-md-9">
                                        <div class="row" style="margin-top:10px !important">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Product Code <span style="color:red">*</span></label>
                                                    @Html.TextBoxFor(Model => Model.ProdCode, new { @class = "form-control", @maxlength = 10 })
                                                </div>
                                            </div>

                                            <div class="col-md-8">
                                                <div class="form-group">
                                                    <label>Product Name <span style="color:red">*</span></label>
                                                    @Html.TextBoxFor(Model => Model.ProdName, new { @class = "form-control", @maxlength = 100 })
                                                </div>
                                            </div>

                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label>Product Description</label>
                                                    @Html.TextAreaFor(Model => Model.ProdDescription, new { @class = "form-control", @maxlength = 200 })
                                                </div>
                                            </div>

                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Catalogue <span style="color:red">*</span></label>
                                                    @Html.DropDownListFor(Model => Model.RefCatId, new SelectList((IEnumerable<SelectListItem>)ViewData["CatalogList"], "Value", "Text"), new { @class = "form-control" })
                                                </div>
                                            </div>

                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Category <span style="color:red">*</span></label>
                                                    @Html.DropDownListFor(Model => Model.RefProdCategory, new SelectList((IEnumerable<SelectListItem>)ViewData["CategoryList"], "Value", "Text"), new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Product Color</label>
                                                    @Html.DropDownList("RefColorList", new SelectList((IEnumerable<SelectListItem>)ViewData["ColorList"], "Value", "Text"), new { @class = "form-control select2", multiple = "multiple" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label>Product Size</label>
                                                    @Html.DropDownList("RefSizeList", new SelectList((IEnumerable<SelectListItem>)ViewData["SizeList"], "Value", "Text"), new { @class = "form-control select2", multiple = "multiple" })
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Product Type</label>
                                                    @Html.DropDownListFor(Model => Model.RefProdType, new SelectList((IEnumerable<SelectListItem>)ViewData["ProdTypeList"], "Value", "Text"), new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Fabric</label>
                                                    @Html.DropDownListFor(Model => Model.RefFabric, new SelectList((IEnumerable<SelectListItem>)ViewData["FabricList"], "Value", "Text"), new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Design</label>
                                                    @Html.DropDownListFor(Model => Model.RefDesign, new SelectList((IEnumerable<SelectListItem>)ViewData["DesignList"], "Value", "Text"), new { @class = "form-control" })
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Brand</label>
                                                    @Html.DropDownListFor(Model => Model.RefBrand, new SelectList((IEnumerable<SelectListItem>)ViewData["BrandList"], "Value", "Text"), new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Celebrity</label>
                                                    @Html.TextBoxFor(Model => Model.Celebrity, new { @class = "form-control", @maxlength = 50 })
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Active Till Date</label>
                                                    @Html.TextBoxFor(Model => Model.ActivetillDate, "{0:dd/MMM/yyyy}", new { @class = "form-control" })
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Retail Price</label>
                                                    @Html.TextBoxFor(Model => Model.RetailPrice, new { @class = "form-control", @maxlength = 50 })
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label>Whole Sale Price</label>
                                                    @Html.TextBoxFor(Model => Model.WholeSalePrice, new { @class = "form-control", @maxlength = 50 })
                                                </div>
                                            </div>

                                            <div class="col-md-3">
                                                <div class="form-group">
                                                    @Html.CheckBoxFor(Model => Model.IsActive, new { @class = "minimal" })
                                                    <label>Is Active</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="box-footer">
                            <input id="btnSubmit" type="submit" value="Submit" class="btn btn-primary btn-flat" onclick="return Validation();" />
                            @*<button class="btn btn-primary" onclick="@("window.location.href='" + @Url.Action("index", "setup") + "'");">Cancel</button>*@
                            @*@Html.ActionLink("cancel", "index", new { @class = "btn btn-primary" })*@
                            <button id="btnCancel" name="btnCancle" class="btn bg-orange margin btn-flat" onclick="window.location.href = '/Product/Index'; return false;">Cancel</button>
                        </div>

                    </div>
                </div>
            </div>

        }
    </section>
</div>

<script type="text/javascript">
    jQuery(document).ready(function () {

        if ('@TempData["Warning"]' != '') {
            toastr["warning"]('@TempData["Warning"]');
        }
        else if ('@TempData["Error"]' != '') {
            toastr["error"]('@TempData["Error"]');
        }

        //
        //var _Button = "<button id=\"btnDelete\" name=\"btnDelete\" class=\"btn bg-primary btn-flat\" onclick=\"deleteProdImg();\">Delete</button>";
        //_Button += " <button id=\"btnClear\" name=\"btnClear\" class=\"btn bg-primary btn-flat\" onclick=\"$('#ChangeImgId').val('');\">Clear Selection</button>";
        //$('.owl-nav').append(_Button);


        if ($("#ProdId").val() > 0) {

            $.ajax({
                type: 'get',
                dataType: 'html',
                cache: false,
                url: '@Url.Action("GetProductImgDet", "Product")',
                data: { ProdId: $("#ProdId").val() },
                beforeSend: function () {

                },
                success: function (response) {
                    if (response != '') {
                        $("#productimgdet").html("");
                        $("#productimgdet").html(response);
                    }
                },
                error: function (ex, th, st) {
                    toastr["error"](th);
                }
            })
        }

        $(".select2").select2();

        function formatState(state) {
            if (!state.id) { return state.text; }
            
            var $state = $(
              //'<div style="color:' + state.element.value.toLowerCase() + '; width:100%" > <div  style="background-color:' + state.element.value.toLowerCase() + '; max-width:30% !important" ></div>' + state.text + '</div>'
              '<span><img style="background-color:' + state.text.toLowerCase().split('/')[0] + ';border:1px;border-style:solid" src="/Content/dist/img/selectcolor.png" class="img-flag" /> ' + state.text.split('/')[1] + '</span>'
            );
            return $state;
        };

        function formatselection(val) {
            return val.id;
        };

        $("#RefColorList").select2({
            templateResult: formatState,
            templateSelection: formatselection
        });

        

        //while(_strlen > 0 )
        //{
        //    var _Colorstr = $("#RefColor").val().substring(1, $("#RefColor").val().length - 1)
        //}
        var _Colors = $("#RefColor").val().split(",");
        $("#RefColorList").val(_Colors).trigger('change');
        //$("#RefSizeList").val("["+$("#RefSize").val()+"]").trigger('change');

        var _Size = $("#RefSize").val().split(",");
        $("#RefSizeList").val(_Size).trigger('change');

        $("#ActivetillDate").datepicker(
            {
                format: 'dd/M/yyyy',
                autoclose: true,
                clearBtn: true,
                setStartDate: moment().format('DD/MMM/YYYY')
            }
            );

        $("#fleLogo").change(function () {
            //
            imgDisplay(this);
        });
    });

    function setimage(_ImagePath, _ImgId) {
        //

        if ($("#ChangeImgId").val() == _ImgId) {
            $("#ChangeImgId").val(0);
            $("#img-" + _ImgId).removeClass('active');
        }
        else {
            $(".img").removeClass('active');
            $("#img-" + _ImgId).addClass('active');
            $("#imgLogo").attr("src", _ImagePath);
            $("#ChangeImgId").val(_ImgId);
        }
    }


    function DeleteProdImg(_ImgId) {
        bootbox.confirm({
            size: 'small',
            message: "Are you sure delete Product image?",
            buttons: {

                'cancel': {
                    label: 'Cancel',
                    className: 'btn-default'
                },
                'confirm': {
                    label: 'Delete',
                    className: 'btn-danger'
                }

            },
            callback: function (result) {
                if (result) {
                    $.ajax({
                        type: 'get',
                        dataType: 'html',
                        cache: false,
                        url: '@Url.Action("DeleteProdImg","Product")',
                        data: { ProdImgId: _ImgId },
                        beforeSend: function () {

                        },
                        success: function (response) {
                            if (response != null) {
                                $("#productimgdet").html('');
                                $("#productimgdet").html(response);
                                toastr["success"]('Image Successfully removed.');
                            }
                        },
                        error: function (ex, st, th) {
                            toastr["error"](th);
                        }
                    });
                }
            }
        })
    }

    function imgDisplay(input) {
        
        if (input.files && input.files[0]) {
            if ((input.files[0].size / 1024) <= 1024)
                {
            var reader = new FileReader();

            reader.onload = function (e) {
                $("#imgLogo").attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
            }
            else
            {
                $("#fleLogo").val('');
                toastr["warning"]('Image size must be lessthan 1 MB.');
            }
        }
    }

    function Validation() {

        var _ProdCode = $("#ProdCode");

        if (_ProdCode.val() == '' || _ProdCode == undefined) {
            _ProdCode.focus();
            toastr["warning"]('Product Code can not left blank!');
            return false;
        }

        var _ProdName = $("#ProdName");
        if (_ProdName.val() == '' || _ProdName == undefined) {
            _ProdName.focus();
            toastr["warning"]('Product Name can not left blank!');
            return false;
        }

        if ($("#RefColorList").val() == '' || $("#RefColorList").val() == null)
        {
            toastr["warning"]('Color can not left blank!');
            $("#RefColorList").focus();
            return false;
        }
        if ($("#RefSizeList").val() == '' || $("#RefSizeList").val() == null) {
            toastr["warning"]('Size can not left blank!');
            $("#RefSizeList").focus();
            return false;
        }

        var _Colorlist = '';
        for (var i = 0; i < $("#RefColorList").select2('data').length; i++) {
            if (i == 0)
                _Colorlist = $("#RefColorList").select2('data')[i].text.split('/')[1];
            else
                _Colorlist += ',' + $("#RefColorList").select2('data')[i].text.split('/')[1];
        }
        $("#RefColor").val(_Colorlist)

        var _Sizelist = '';
        for (var i = 0; i < $("#RefSizeList").select2('data').length; i++) {
            if (i == 0)
                _Sizelist = $("#RefSizeList").select2('data')[i].text;
            else
                _Sizelist += ',' + $("#RefSizeList").select2('data')[i].text;
        }
        $("#RefSize").val(_Sizelist)


        if ($("#ProdId").val() == 0) {
            var _flg = "true";
            //
            $.ajax({
                type: "POST",
                async: false,
                dataType: 'json',
                //contentType: "application/json; charset=utf-8",
                url: '@Url.Action("isValueExists", "Product")',
                data: { pProdCode: _ProdCode.val() },
                dataType: "json",
                beforeSend: function () {
                    //
                    $("#ajaxLoader").show();
                },
                success: function (data) {
                    //

                    if (data) {
                        toastr["warning"]('Duplicate Value!');
                        _flg = "false";
                    }
                    $("#ajaxLoader").hide();
                },
                error: function (result, st, er) {
                    //
                    toastr["error"](result);
                    $("#ajaxLoader").hide();
                },
            });
            if (_flg == "true") {
                //
                return true;
            }
            else {
                //
                return false;
            }
        }

        return true;
    }

</script>